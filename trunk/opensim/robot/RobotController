/* **-*-c++-*-**************************************************************
  Copyright (C)2002 David Jung <opensim@pobox.com>

  This program/file is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
	
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details. (http://www.gnu.org)
	
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

  $Id: RobotController 1039 2004-02-11 20:50:52Z jungd $
  $Revision: 1.4 $
  $Date: 2004-02-11 15:50:52 -0500 (Wed, 11 Feb 2004) $
  $Author: jungd $
 
****************************************************************************/

#ifndef _ROBOT_ROBOTCONTROLLER_
#define _ROBOT_ROBOTCONTROLLER_

#include <robot/robot>

#include <robot/Controller>
#include <robot/Robot>


namespace robot {

/**
 * Base class of Controllers that are complete top-level 
 *  robot controllers (as opposed to the subcontrollers from which
 *   they may be composed).
 */
class RobotController : public Controller
{
public:
  RobotController(ref<Robot> robot)
    : robot(robot)
  { this->setControlInterface(robot->getControlInterface()); } 
  ///!!! perhaps calling virtual from construtror is bad - object not completely constructed yet? will get parent method instead? (it's not defined, so why does it compile?)
  
protected:
  ref<Robot> robot; ///< controlled robot

private:
  RobotController() {}
};


} // robot

#endif
