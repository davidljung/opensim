/****************************************************************************
  Copyright (C)1996 David Jung <opensim@pobox.com>

  This program/file is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details. (http://www.gnu.org)
  
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  
  $Id: VFile 1029 2004-02-11 20:45:54Z jungd $
  $Revision: 1.3 $
  $Date: 2004-02-11 15:45:54 -0500 (Wed, 11 Feb 2004) $
  $Author: jungd $
 
****************************************************************************/

#ifndef _BASE_VFILE_
#define _BASE_VFILE_

#include <base/base>
#include <base/VEntry>
#include <base/path_not_found>
#include <base/io_error>

#include <iostream>
#include <fstream>


namespace base {


class VFile : public VEntry
{
public:
  virtual ~VFile() {}

  virtual bool isDirectory() const { return false; }

  virtual String extension() const = 0;  ///< the file's extension (e.g. 'png')

  virtual std::istream&  istream() const throw(io_error) = 0;
  virtual std::ostream&  ostream() const throw(io_error) = 0;
  virtual std::iostream& iostream(std::iostream::openmode mode = (std::iostream::in | std::iostream::out) ) const throw(io_error) = 0;

  virtual void close() const throw(io_error) = 0; ///< close the file (can be re-opened again via istream/ostream/iostream() )

protected:
  VFile(const PathName& pathname) : VEntry(pathname) {}
  VFile(const VFile& f) : VEntry(f) {}

  friend class VFileSystem;
};

} // base

#endif
