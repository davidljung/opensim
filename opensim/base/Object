/****************************************************************************
  Copyright (C)1996 David Jung <opensim@pobox.com>

  This program/file is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details. (http://www.gnu.org)
	
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

  $Id: Object 1029 2004-02-11 20:45:54Z jungd $
  $Revision: 1.3 $
  $Date: 2004-02-11 15:45:54 -0500 (Wed, 11 Feb 2004) $
  $Author: jungd $
 
****************************************************************************/

#ifndef _BASE_OBJECT_
#define _BASE_OBJECT_

#include <base/base>

namespace base {


/** Base class/standard interface for objects which require
    IO support
*/

class Object
{
public:
  /** Construct an object. Note Object is a pure virtual base class
      and therefore cannot be constructed on its own, only derived
      classes which overide the clone and className methods are
      concrete classes and can be constructed.*/
  Object() {}
  virtual ~Object() {}
  
  virtual bool isSameKindAs(const Object&) const { return true; }
  
  /** return the name of the object's class type. Must be defined
      by derived classes.*/
  virtual String className() const = 0;
  
protected:
  Object(const Object&) {}
  Object& operator=(const Object&) { return *this; }
};


} // base

#endif
