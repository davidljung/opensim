/****************************************************************************
  Copyright (C)1996 David Jung <opensim@pobox.com>

  This program/file is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details. (http://www.gnu.org)
  
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  
  $Id: Joint 1031 2004-02-11 20:46:36Z jungd $
  $Revision: 1.2 $
  $Date: 2004-02-11 15:46:36 -0500 (Wed, 11 Feb 2004) $
  $Author: jungd $
 
****************************************************************************/

#ifndef _PHYSICS_JOINT_
#define _PHYSICS_JOINT_

#include <physics/physics>
#include <physics/Constraint>
#include <physics/Motor>
#include <physics/Body>


namespace physics {


class Joint : virtual public Constraint 
{
public:
  Joint() {}
  virtual ~Joint() {}

  virtual void attach(ref<Body> body1, ref<Body> body2) = 0; ///< attach this joint to two bodies
  virtual ref<Body>       getBody(Int index) = 0;       ///< get Body (index is 1 or 2); returns null if unattached
  virtual ref<const Body> getBody(Int index) const = 0;

  virtual void attachMotor(Int dof, ref<Motor> motor) = 0; ///< attach Motor to dof n, or remove if motor==0
  virtual ref<Motor>       getMotor(Int dof) = 0;          ///< get Motor on dof n, or 0 if none
  virtual ref<const Motor> getMotor(Int dof) const = 0;
};


} // physics

#endif
