/* **-*-c++-*-**************************************************************
  Copyright (C)2003 David Jung <opensim@pobox.com>

  This program/file is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details. (http://www.gnu.org)
  
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  
  $Id: Spatial 1031 2004-02-11 20:46:36Z jungd $
  $Revision: 1.3 $
  $Date: 2004-02-11 15:46:36 -0500 (Wed, 11 Feb 2004) $
  $Author: jungd $
 
****************************************************************************/

#ifndef _PHYSICS_SPATIAL_
#define _PHYSICS_SPATIAL_

#include <physics/physics>

#include <base/ReferencedObject>
#include <base/Named>
#include <physics/PositionableOrientable>


namespace physics {

/// base class for things and collections thereof that can be positioned and oriented in 3D space
class Spatial : public PositionableOrientable, virtual public base::Named, virtual public base::ReferencedObject
{
public:
  Spatial() {}
  Spatial(const String& name) : Named(name) {}
  Spatial(const Spatial& s) : Named(s), PositionableOrientable(s) {}
  
  virtual Spatial& operator=(const Spatial& s) { PositionableOrientable::operator=(s); Named::operator=(s); return *this; }
  
  virtual ~Spatial() {}
};
  
inline std::ostream& operator<<(std::ostream& out, const Spatial& s) // Output
{
  return out << s.getName();
}


} // physics

#endif
